@import url(default.css);
@import url(fonts.css);

/* 글자 스타일은 상속받음. 기본 글자 스타일은 모든 태그를 감싸는 html과 body에 선언
   (body에만 선언하면 되잖아 > 가끔 html에 태그해야 하는 경우가 있어서 한번에. */
html, body {
    font-family: 'Pretendard', sans-serif;
    font-weight: 400;
    font-size: 15px;
    color: #3d3d3d; /* 글자 색상 */
    letter-spacing: -0.05em; /* 자간 */
    line-height: 1.4; /* 배수 - 글자크기의 1.4배 */
    word-break: keep-all; /* 단어별로 줄바꿈 */
}
/* 홈페이지 전체를 감싸는 요소 - 가로 스크롤바가 생겼을 때 옆 배경이 잘리는 현상을 막음*/
#wrap {
    min-width: 1260px;
}
/*  wrapper : 홈페이지의 넓이를 제한하고 가운데정렬*/
.wrapper {
    width: 1260px; /* 넓이 */
    margin: 0 auto; /* 가운데정렬 */
}

header {
    height: 100px;
}
header .wrapper { /* flex는 자신에게 주지 않고 해당 태그의 부모에게 줌 */
    display: flex;
    justify-content: space-between; /* 양쪽정렬 */
}
header .logo {
    margin: 22px 0 0 0;
}
header .gnb ul {
    display: flex;
}
/* 1차메뉴는 큼직하게 누려야 됨. 여백 및 사이즈는 a한테 줘야함*/
header .gnb ul li a {
    font-size: 22.5px;
    color: #1d1d1d;
    padding: 37px 23px 41px 23px;
    /* display : block = padding값을 적용하기 위해서 - a가 inline 태그라 적용이 안됨 */
    display: block;
}
/* a태긍 마우스를 올렸을 때의 스타일 */
header .gnb ul li a:hover {
    color: #645AB2;
    font-weight: 700;
    letter-spacing: -0.03em;
}

.visual {
    height: 720px;
    letter-spacing: -0.05em;
    background-image: url(../images/visual_bg_test.png);
    background-position: center center;
    background-repeat: no-repeat;
    background-size: cover;
    /*  background 속성을 한번에 선언하는 방법.
    background이미지 url  repeat  position(좌우, 상하)  /  size */
    background: url(../images/visual_bg.png) no-repeat center center / cover;
    color: rgba(255,255,255,1);
    padding: 0 0 0 150px;

}
.visual strong {
    padding: 246px 0 0 4px;
    margin: 0 0 -4px 0;
    display: block; /* strong이 inline 요소라서 적용이 안되기 때문에 block으로 변경 */
}
.visual h2 {
    font-size: 40px;
    line-height: 1.2;
}
.visual h2 em {
    font-weight: 700;
}
.visual h2 em .blue {
    color: #A5CEF8;
}
.visual h2 em .pink {
    color: #F198AE;
}

.introduce {
    margin: 133px 0 0 0;
}
.introduce .art {
    display: flex;
    justify-content: center;
    margin: 0 0 45px 0;
}
.introduce .art .txt {
    margin: 0 0 0 74px;
    width: 461px;
}
.introduce .scholarship {
    display: flex;
    justify-content: center;
    text-align: right;
}
.introduce h2 {
    font-weight: 700;
    color: #1d1d1d;
    font-size: 35px;
    margin: 125px 0 0 0;
}
.introduce strong {
    font-weight: 700;
    color: #1d1d1d;
    font-size: 18px;
    line-height: 1.2;
    margin: 9px 0 11px 0;
    display: block;
}
.introduce .btn {
    display: flex;
    /* a태그는 원래 좌우로 배치됨
    하지만 사이사이 여백이 발생 > 이 여백을 삭제하려면  display-flex로
    좌우 배치해야 함*/
    margin: 20px 0 0 0;
}
.introduce .scholarship .txt {
    margin: 0 74px 0 0;
}
.introduce .scholarship .btn {
    justify-content: flex-end;
    /* flex로 배치한 버튼은 오른쪽 정렬 text-align 영향을 받지 않음 */
}
.introduce .scholarship .txt {
    width: 461px;
}
.introduce .btn a {
    border: 1px solid #cccccc;
    padding: 6px 19px;
    display: block; /*  padding값을 적용하기 위해서 */
    margin: 0 10px 0 0;
}
.introduce .btn a:hover {
    /* 오버전에 border가 있었다면 오버후에도 border를 주는 것이 사이즈가 유지됨*/
    background-color: #645AB2;
    border: 1px solid #645AB2;
    color: #fff;
}
/* btn 클래스 안에 있는 a 중에서 마지막 a */
.introduce .btn a:last-child {
    margin-right: 0;
}

.promotion {
    /* 배경보다 promotion 내부의 컨텐츠 길이가 더 김
       = 배경의 위치를 정확하게(가운데/상단)
         background-size 주면 안됨(디자인한 사이즈대로 들어가야 하니까)*/
    background: url(../images/promotion_bg.png) no-repeat center top;
    margin: 0 0 87px 0;
}
.promotion .news {
    color: rgba(255,255,255,0.8);
    padding: 79px 0 140px 0;
    margin: 154px 0 0 0;
}
.promotion .news .wrapper {
    display: flex;
    justify-content: space-between;
}
.promotion .news .tit {
    margin: 0 0 0 21px;
    letter-spacing: -0.05em;
}
.promotion .news .tit h2 {
    font-size: 35px;
    font-weight: 700;
    color: #fff;
    margin: 5px 0 1px 0;
}
.promotion .news .list {
    width: 648px;
}
.promotion .news .list ul li {
    border-top: 1px solid rgba(255,255,255,0.6);
}
.promotion .news .list ul li:last-child {
    border-bottom: 1px solid rgba(255,255,255,0.6);
}
.promotion .news .list ul li a {
    /* display:flex는 해당 요소를 block요소로 만들어서 넓이를 100%로 만듬 */
    display: flex;
    justify-content: space-between;
    align-items: center; /* 위아래 가운데 */
    padding: 13px 11px;
}
.promotion .news .list ul li a strong {
    color: #fff;
    font-size: 18px;
}
/* a 태그에 오버했을 때 strong태그가 잡힘 */
.promotion .news .list ul li a:hover strong {
    font-weight: 700;
}
.promotion .news .wrapper {
    position: relative;
    /* more 정렬을 기준으로 세움
       more를 감싸는 wrapper를 기준으로 정렬
       wrapper에 position을 하나 줘야함
       position 속성값 중에서 유일하게 relative 값만이
       요소에 아무런 영향을 끼치지 않음 */
}
.promotion .news .more {
    border: 1px solid rgba(255,255,255,0.6);
    padding: 6px 19px;
    display: inline-block; /* inline 요소는 padding 적용 안됨 */
    margin: 11px 0 0 0;
    position: absolute;
    left: 20px;
    top: 70px;
    /* position : absolute는 반드시
       좌우위치 left or right
       위아래 위치 top or bottom 값이 필수이고
       이 값이 어디서부터 계산하는지 기준이 필요함.
       *** 나를 감싸는 요소 중에서 position 속성을 가진 *** 요소를 기준으로 정렬
       ---- .news의 .wrapper를 기준으로 정렬 */
}
.promotion .news .more:hover {
    border: 1px solid #fff;
    background-color: #fff;
    color: #645AB2;
    font-weight: 700;
}
.promotion .movie .tit h2 {
    font-size: 35px;
    font-weight: 700;
    color: #fff;
    margin: 5px 0 25px 0;
    letter-spacing: -0.07em;
}
.promotion .movie .list ul {
    display: flex;
    justify-content: space-between;
}
.promotion .movie .list ul li  {
    width: 404px;
}
.promotion .movie .list ul li a {
    display: block;
    /* a는 inline 태그, 내부에는 block 태그
    a와  li의 영역 크기를 동일하게 주기 위해 a도 block 요소로 만듬*/
}
.promotion .movie .list ul li a .photo img {
    border: 3px solid #645AB2;
    /* 이미지에 테두리를 주면 이미지 밖으로 테두리 생성
       이미지는 감싸는 영역의 크기를 이미지보다 작게해도 이미지가 자동으로
       줄어들지 않는다. 본인의 사이즈대로 나타남. <-> 글자는 줄바꿈을 함. */
       width: calc(100% - 6px);
       /* 나를 감싸는 photo의 넓이의 100% - 테두리는 별도(포함X)
          넓이 100%에서 테두리값을 뺀 널빙를 주면 됨. = calc 사용 */
}
.promotion .movie .list ul li a h3 {
    font-weight: 700;
    margin: 7px 0 0 0;
}
/* 마우스 오버했을 때
   스타일을 변경되는 요소의 스타일이 정의된 선택자를 그대로 복사해야함
   만약에 그냥 body라던가 다른 스타일을 상속받은거면 그냥 a에게 스타일을 주면 됨 */
   .promotion .movie .list ul li a:hover .photo img {
    border: 3px solid #fff;
    width: calc(100% - 6px);
   }
.promotion .movie .list ul li a:hover h3 {
    color: #645AB2;
}
footer {
    background-color: #111111;
    color: rgba(255,255,255,0.8);
    padding: 31px 0 116px 0;
}
footer .f_nav ul {
    display: flex;
}
footer .f_nav ul li {
    margin: 0 30px 0 0;
}
footer .f_nav ul li.privacy {
    font-weight: 700;
}
footer .f_info {
    margin: 30px 0 30px 0;
}
/* footer .f_info address, span
   이렇게 선택자를 쓰면 footer안에 f_info라는 클래스명을
   가진 요소 안에 있는 address와 이 html 내부의 모든 span 태그가 되어버림*/
footer .f_info address,
footer .f_info span {
    margin: 0 28px 3px 0;
    display: inline-block;
    /* address는 블럭태그인데 span태그와 좌우에 배치되려고,
       span은 margin을 적용시키려고 하여 display: inline-block 태그를 붙임*/
}
footer .wrapper {
    /* footer .family 정렬의 기준 */
    position: relative; /* 꼭 relative를 주지 않고 아무거나 줘도 상관 X */
}
footer .copyright {
    color: rgba(255,255,255,0.6);
}
footer .family {
    position: absolute;
     right: 0;
     top: -2.5px;
    /* 코딩순서와 상관 없이 위치를 지정, 상단의 헤더처럼 고정해야 하는 것을 위해
       footer .wrapper를 기준으로 정렬 */
}
footer .family button {
    border: 1px solid rgba(255,255,255,0.5);
    width: 190px;
    height: 28px;
    /* 원래 버튼 태그는 요소 자체가 좌우/위아래 가운데 정렬함 */
    display: flex;
    justify-content: space-between;
    /* 내부 두 요소를 좌우 끝ㄷ나에 배치하기 위해서 */
    align-items: center; /* 위아래 가운데 */
    padding: 0 14px;
}